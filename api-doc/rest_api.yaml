swagger: '2.0'

# This is your document metadata
info:
  version: "0.1.0"
  title: IEML Library API
  description : API for both the IEML dictionary and the IEML library

basePath : /api
produces :
  - application/json
paths:

  ##############################
  ##          INTLEKT         ##
  ##############################

  /intlekt/collection/get_tags:
    post:
      operationId: handlers.collection_get_tags
      description: |
        Retrieve the ordered list of tags in this collection url. Download the list of tag from the internet and save it,
        in a MongoDb database if needed. Return the list of tags with each tag title, count, link in the source collection
        and ieml. This list is sorted from the most cited tag to the lowest.
      consumes:
        - application/json
      tags:
        - Intlekt
        - Collection
      parameters:
        - name: body
          in: body
          description: |
            The url of the collection
          required: true
          schema:
            type: object
            required:
              - url
            properties:
              url:
                type: string
      responses:
        '200':
          description: |
            return the list of tag and theirs frequency


  /intlekt/collection/define_tag:
    post:
      operationId: handlers.collection_define_tag
      description: |
        Set the ieml of a specific tag of a specific collection url.
      consumes:
        - application/json
      tags:
        - Intlekt
        - Collection
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - tag
              - ieml
              - url
            properties:
              tag:
                type : string
              ieml:
                type : string
              url:
                type: string
      responses:
        '200':
          description: |
            Success

  ##############################
  ## GLOSSARY API             ##
  ##############################

  /intlekt/glossary:
    get:
      operationId: handlers.get_glossary_list
      tags:
        - Intlekt
        - Glossary
      description: |
        Return the list of defined glossaries. A glossary is defined by his id. All glossary have a name unique for all
        the glossaries.
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - glossaries
            properties:
              success:
                type: boolean
              glossaries:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                    - nb_terms
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    nb_terms:
                      type: integer

    post:
      operationId: handlers.new_glossary
      consumes:
        - application/json
      tags:
        - Intlekt
        - Glossary
      description: |
        Create a new glossary and return his id. If there is already a glossary with this name, return an error.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - id
            properties:
              success:
                type: boolean
              id:
                type: string
    delete:
      operationId: handlers.delete_glossary
      consumes:
        - application/json
      tags:
        - Intlekt
        - Glossary
      description: |
        Delete an existing glossary given its id.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  '/intlekt/glossary/{glossary_id}':
    get:
      operationId: handlers.get_terms_of_glossary
      tags:
        - Intlekt
        - Glossary
      description: |
        Get a list of all term in the glossary with this id.
      parameters:
        - name: glossary_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - terms
            properties:
              success:
                type: boolean
              terms:
                type: array
                items:
                  $ref: '#/definitions/term'
    post:
      operationId: handlers.add_terms_to_glossary
      tags:
        - Intlekt
        - Glossary
      consumes:
        - application/json
      description: |
        Add a list of terms to the glossary with glossary_id. It a term is already present in this glossary,
        the term is ignored.
      parameters:
        - name: glossary_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - terms
            properties:
              terms:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

    delete:
      operationId: handlers.remove_terms_to_glossary
      tags:
        - Intlekt
        - Glossary
      consumes:
        - application/json
      description: |
        Remove a list of terms to the glossary with glossary_id. If a term is not present in this glossary,
        the term is ignored.
      parameters:
        - name: glossary_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - terms
            properties:
              terms:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  /intlekt/dictionary:
    get:
      description: |
        Return all the terms defined in the ieml dictionary.
      tags:
        - Intlekt
        - Dictionary
      operationId: handlers.dictionary_dump
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/term'

  ##############################
  ## FOR THE DICTIONARY'S API ##
  ##############################

  /allieml:
    get:
      operationId: handlers.all_ieml
      tags:
        - Dictionary
      description: |
        Returns a list of all the `IEML term` objects.
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/ieml_term'

  /get_term:
    get:
      operationId: handlers.get_term
      tags:
        - Dictionary
      description: |
        Return a specific term object.
      parameters:
        - name: script
          in: query
          type: string
          required: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ieml_term'

  /client/authenticate:
    post:
      tags:
        - Dictionary
      operationId: handlers.authenticate
      description: |
        Login handler for the dictionary user
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: name
          in: formData
          type: string
          required: true
        - name: password
          in: formData
          type: string
          required: true
      responses:
        '200':
          description: Successful response

  /scriptparser/parse:
    get:
      operationId: handlers.parse_ieml
      tags:
        - Dictionary
        - Parsing
      description: |
        Checks the validity of `IEML term`
      parameters:
        - name: iemltext
          in: query
          description: The `IEML term` for which we want to get the computed tree.
          type: string
          required: true
      responses:
        '200':
          description: Successful response
          schema:
            title: Parsed term
            type: object
            required:
              - success
            properties:
              factorization:
                type: string
              level:
                type : integer
              taille:
                type : integer
              class:
                type: integer
              success  :
                type: boolean
              canonical:
                type: array
                items:
                  type : string
              rootIntersections:
                type: array
                items:
                  type: string
              containsSize:
                type: integer

  /scriptparser/tables:
    get:
      operationId: handlers.script_table
      tags:
        - Dictionary
        - Parsing
      description: |
        Compute the tables for an `IEML paradigm`
      parameters:
        - name: iemltext
          in: query
          description: The `IEML paradigm` for which we want to get the computed table.
          type: string
          required: true
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            properties:
              success:
                type: boolean
              tree:
                type: object
                properties:
                  Tables:
                    type: array
                    items:
                      type: object
                  input:
                    type: string

  /scriptparser/tree:
    get:
      operationId: handlers.script_tree
      tags:
        - Dictionary
        - Parsing
      description: |
        Computes the tree of a given `IEML term`
      parameters:
        - name: iemltext
          in: query
          description: The `IEML term` for which we want to get the computed tree.
          type: string
          required: true
      responses:
        '200':
          description: Successful response

  /getRelVisibility:
    post:
      tags:
        - Dictionary
      operationId: handlers.get_relation_visibility
      description: |
        TODO
      parameters:
        - name: body
          in: body
          required: True
          schema:
            type: object
            properties:
              ieml:
                type: string
      responses:
        '200':
          description: Successful response

  /rels:
    post:
      operationId: handlers.get_relations
      tags:
        - Dictionary
        - Relations
      description: >
        Returns a list of all the relations associated with the `IEML term`
        given in the payload
      parameters:
        - name: term
          in: body
          description: >
            The `IEML term` for which we want to get its associated
            relationships.
          required: true
          schema:
            type: object
            properties:
              ieml:
                type: string
              factorize_descendant:
                type: boolean
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              type: object
              properties:
                rellist:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                      exists:
                        type: boolean
                      ieml:
                        type: string
                      start:
                        type: string
                      visible:
                        type: boolean
                reltype:
                  type: string
                visible:
                  type: boolean
  /newieml:
    post:
      operationId: handlers.new_ieml_script
      description: |
        Add a new `IEML` term to the dictionary
      tags:
        - Dictionary
        - Term
      parameters:
        - in : body
          name : body
          required : true
          schema :
            type: object
            required:
              - IEML
              - PARADIGM
              - token
            properties:
              IEML:
                type : string
              PARADIGM:
                type : string
              token :
                type : string
              INHIBITS :
                type : array
                items :
                  type : string
      responses:
        '200':
          description: Successful response

  /updateieml:
    post:
      operationId: handlers.update_ieml_script
      tags:
        - Dictionary
        - Term
      description: |
        Modify an `IEML` term from the dictionary
      parameters:
        - name : body
          in: body
          required : true
          schema:
            type : object
            required:
              - ID
              - token
            properties:
              ID :
                type : string
              PARADIGM :
                type : string
              IEML :
                type : string
              FR :
                type : string
              EN :
                type : string
              token :
                type : string
              INHIBITS :
                type : array
                items :
                  type : string
      responses:
        '200':
          description: Successful response

  /update_status:
    get:
      operationId: handlers.computation_status
      tags:
        - Dictionary
      description: |
        Get the status of the computation.
      responses:
        '200':
          description: Successful response

  /remieml:
    post:
      operationId: handlers.remove_ieml_script
      tags:
        - Dictionary
        - Term
      description: |
        Delete an `IEML` term from the dictionary
      parameters:
        - in : body
          name : body
          required : true
          schema :
            type: object
            required:
              - id
              - token
            properties:
              id:
                type : string
              token:
                type : string
      responses:
        '200':
          description: Successful response

  '/updaterelations':
    post:
      operationId: handlers.update_relations
      tags:
        - Dictionary
        - Relation
      description: |
        Recompute the relations in the dictionary. This operation may take a long time (~2min).
      parameters:
        - in : body
          name : body
          required : true
          schema :
            type: object
            required:
              - token
            properties:
              token:
                type : string
      responses:
        '200':
          description: Successful response

  '/exists/ieml/{ieml_term}':
    get:
      operationId: handlers.ieml_term_exists
      tags:
        - Dictionary
        - Term
      description: |
        Check if `<term_ieml>` exists in the dictionary
      parameters:
        - in: path
          name: ieml_term
          required: true
          type: string
      responses:
        '200':
          description: Successful response

  '/exists/FR/{tag_fr}':
    get:
      operationId: handlers.fr_tag_exists
      tags:
        - Dictionary
        - Term
      description: |
        Check if `<term_ieml>` exists in the **French** dictionary
      parameters:
        - in: path
          name: tag_fr
          required: true
          type: string
      responses:
        '200':
          description: Successful response

  '/exists/EN/{tag_en}':
    get:
      operationId: handlers.en_tag_exists
      tags:
        - Dictionary
        - Term
      description: |
        Check if `<term_ieml>` exists in the **English** dictionary
      parameters:
        - in: path
          name: tag_en
          required: true
          type: string
      responses:
        '200':
          description: Successful response


definitions:
  ##############################
  ## FOR THE DICTIONARY'S API ##
  ##############################

  ieml_term:
    properties:
      CANONICAL:
        type: array
        items:
          type: string
      CLASS:
        type: number
      EN:
        type: string
      FR:
        type: string
      IEML:
        type: string
      LAYER:
        type: number
      PARADIGM:
        type: number
      ROOT_PARADIGM:
        type: boolean
      TAILLE:
        type: number
      _id:
        type: string

  term:
    properties:
      CLASS:
        type: string
      EN:
        type: string
      FR:
        type: string
      IEML:
        type: string
      LAYER:
        type: number
      PARADIGM:
        type: boolean
      ROOT_PARADIGM:
        type: boolean
      SIZE:
        type: number
      INDEX:
        type: number
      RANK:
        type: number