swagger: '2.0'

# This is your document metadata
info:
  version: "0.1.0"
  title: IEML Library API
  description : API for both the IEML dictionary and the IEML library

basePath : /api
produces :
  - application/json
paths:

  ##############################
  ##          INTLEKT         ##
  ##############################

  /intlekt/collection/get_tags:
    post:
      operationId: handlers.collection_get_tags
      description: |
        Retrieve the ordered list of tags in this collection url. Download the list of tag from the internet and save it,
        in a MongoDb database if needed. Return the list of tags with each tag title, count, link in the source collection
        and ieml. This list is sorted from the most cited tag to the lowest.
      consumes:
        - application/json
      tags:
        - Collection
      parameters:
        - name: body
          in: body
          description: |
            The url of the collection
          required: true
          schema:
            type: object
            required:
              - url
            properties:
              url:
                type: string
      responses:
        '200':
          description: |
            return the list of tag and theirs frequency


  /intlekt/collection/define_tag:
    post:
      operationId: handlers.collection_define_tag
      description: |
        Set the ieml of a specific tag of a specific collection url.
      consumes:
        - application/json
      tags:
        - Collection
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - tag
              - ieml
              - url
            properties:
              tag:
                type : string
              ieml:
                type : string
              url:
                type: string
      responses:
        '200':
          description: |
            Success

  ##############################
  ## GLOSSARY API             ##
  ##############################

  /intlekt/glossary:
    get:
      operationId: handlers.get_glossary_list
      tags:
        - Glossary
      description: |
        Return the list of defined glossaries. A glossary is defined by his id. All glossary have a name unique for all
        the glossaries. If the split parameter is set, return two list, one for the favorited glossaries, the other for
        the non-favorited. Otherwise return a list with all the glossaries (sorted in alphabetical order).
      parameters:
        - in: query
          name: split
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
              favorites:
                type: array
                items:
                  $ref: "#/definitions/glossary"
              others:
                type: array
                items:
                  $ref: "#/definitions/glossary"
              glossaries:
                type: array
                items:
                  $ref: "#/definitions/glossary"


    post:
      operationId: handlers.new_glossary
      consumes:
        - application/json
      tags:
        - Glossary
      description: |
        Create a new glossary and return his id. If there is already a glossary with this name, return an error.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - id
            properties:
              success:
                type: boolean
              id:
                type: string
    delete:
      operationId: handlers.delete_glossary
      consumes:
        - application/json
      tags:
        - Glossary
      description: |
        Delete an existing glossary given its id.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  '/intlekt/glossary/{glossary_id}':
    get:
      operationId: handlers.get_terms_of_glossary
      tags:
        - Glossary
      description: |
        Get a list of all term in the glossary with this id.
      parameters:
        - name: glossary_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - terms
              - name
              - id
            properties:
              success:
                type: boolean
              terms:
                type: array
                items:
                  $ref: '#/definitions/term'
              id:
                type: string
              name:
                type: string
    post:
      operationId: handlers.add_term_to_glossary
      tags:
        - Glossary
      consumes:
        - application/json
      description: |
        Add a list of terms to the glossary with glossary_id. It a term is already present in this glossary,
        the term is ignored.
      parameters:
        - name: glossary_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - term
            properties:
              term:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
    delete:
      operationId: handlers.remove_terms_to_glossary
      tags:
        - Glossary
      consumes:
        - application/json
      description: |
        Remove a list of terms to the glossary with glossary_id. If a term is not present in this glossary,
        the term is ignored.
      parameters:
        - name: glossary_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - terms
            properties:
              terms:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  '/intlekt/glossary/favorite':
    post:
      operationId: handlers.set_glossary_favorite
      tags:
        - Glossary
      consumes:
        - application/json
      description: |
        Set the list of favorited glossaries.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - names
            properties:
              names:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  ##############################
  ## LEXICON API             ##
  ##############################

  /intlekt/lexicon:
    get:
      operationId: handlers.get_lexicon_list
      tags:
        - Lexicon
      description: |
        Return the list of defined lexicons. A lexicon is defined by his id. Each lexicon have a name unique for all
        the lexicons. If the split parameter is set, return two list, one for the favorited lexicons, the other for
        the non-favorited. Otherwise return a list with all the lexicons (sorted in alphabetical order).
      parameters:
        - in: query
          name: split
          type: string

      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
              favorites:
                type: array
                items:
                  $ref: "#/definitions/lexicon"
              others:
                type: array
                items:
                  $ref: "#/definitions/lexicon"
              lexicons:
                type: array
                items:
                  $ref: "#/definitions/lexicon"

    post:
      operationId: handlers.new_lexicon
      consumes:
        - application/json
      tags:
        - Lexicon
      description: |
        Create a new lexicon and return his id. If there is already a lexicon with this name, return an error.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - id
            properties:
              success:
                type: boolean
              id:
                type: string
    delete:
      operationId: handlers.delete_lexicon
      consumes:
        - application/json
      tags:
        - Lexicon
      description: |
        Delete an existing lexicon given its id.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  '/intlekt/lexicon/{lexicon_id}':
    get:
      operationId: handlers.get_words_of_lexicon
      tags:
        - Lexicon
      description: |
        Get a list of all words in the lexicon with this id.
      parameters:
        - name: lexicon_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - words
              - name
              - id
            properties:
              success:
                type: boolean
              words:
                type: array
                items:
                  type: object
                  required:
                    - ieml
                    - translations
                    - id
                    - last_modified
                  properties:
                    ieml:
                      type: string
                    id:
                      type: string
                    translations:
                      $ref: "#/definitions/translations"
                    last_modified:
                      type: string

              id:
                type: string
              name:
                type: string
    post:
      operationId: handlers.add_word_to_lexicon
      tags:
        - Lexicon
      consumes:
        - application/json
      description: |
        Add a word to the lexicon with lexicon_id. If the word is already present in this lexicon,
        the word is ignored.
      parameters:
        - name: lexicon_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - word
            properties:
              word:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

    delete:
      operationId: handlers.remove_words_to_lexicon
      tags:
        - Lexicon
      consumes:
        - application/json
      description: |
        Remove a list of words from the lexicon with lexicon_id. If a word is not present in this lexicon,
        the word is ignored.
      parameters:
        - name: lexicon_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - words
            properties:
              words:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  '/intlekt/lexicon/favorite':
    post:
      operationId: handlers.set_lexicon_favorite
      tags:
        - Lexicon
      consumes:
        - application/json
      description: |
        Set the favorite list of lexicons.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - names
            properties:
              names:
                type: array
                items:
                  type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean

  ##############################
  ## DICTIONARY API           ##
  ##############################


  /intlekt/dictionary:
    get:
      description: |
        Return all the terms defined in the ieml dictionary.
      tags:
        - Dictionary
      operationId: handlers.dictionary_dump
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - terms
            properties:
              success:
                type: boolean
              terms:
                type: array
                items:
                  $ref: '#/definitions/term'


  /intlekt/dictionary/drupal:
    get:
      description: |
        Return the dictionary for the drupal website
      tags:
        - Drupal
      operationId: handlers.drupal_dictionary_dump
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/drupal_term'

  /intlekt/relations/drupal:
    get:
      description: |
        Return the relations for the drupal website
      tags:
        - Drupal
      operationId: handlers.drupal_relations_dump
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/drupal_relations'

  ##############################
  ## Library API              ##
  ##############################

  /intlekt/library:
    post:
      description: |
        Define a new usl in the intlekt library. The usl must have an associated translation, which an index is build on
         it. If the ieml string doesn't reference a valid ieml_object an error is returned. If the ieml is already
         present in db, an error is returned (use the put method to update the usl). The translations do not need to be
         unique (unlike the translation of the dictionary). Return the id of the saved record.
      consumes:
        - application/json
      tags:
        - Library
      operationId: handlers.save_to_library
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ieml
            properties:
              ieml:
                type: string
              translations:
                $ref: '#/definitions/translations'
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
              - id
            properties:
              success:
                type: boolean
              id:
                type: string
    # delete:
    #   description: |
    #     Delete a list of usl from the library. If an ieml is not valid, an error is raised. If the usl is not
    #     present in the db, this call do nothing.
    #   consumes:
    #     - application/json
    #   tags:
    #     - Library
    #   operationId: handlers.remove_from_library
    #   parameters:
    #     - name: body
    #       in: body
    #       required: true
    #       schema:
    #         type: object
    #         required:
    #           - ieml
    #         properties:
    #           ieml:
    #             type: array
    #             items:
    #               type: string
      # responses:
      #   '200':
      #     description: Successful response
      #     schema:
      #       type: object
      #       required:
      #         - success
      #       properties:
      #         success:
      #           type: boolean

  '/intlekt/library/ieml/{ieml}':
    put:
      description: |
        Update an usl already saved to the library. You can update the translations previously defined
        and the ieml.
      operationId: handlers.update_usl_translation_from_ieml
      consumes:
        - application/json
      tags:
        - Library
      parameters:
        - name: ieml
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              ieml:
                type: string
              translations:
                $ref: '#/definitions/translations'
      responses:
        '200':
          description: Successful response
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean





  ##############################
  ## USL API                  ##
  ##############################


  /intlekt/usl/to_json:
    post:
      description: |
        Return the json representation of an ieml string
      consumes:
        - application/json
      tags:
        - USL
      operationId: handlers.ieml_to_json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ieml
            properties:
              ieml:
                type: string
      responses:
        '200':
          description: |
            successful request
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
              json:
                $ref: '#/definitions/ieml_object_json'


  /intlekt/usl/to_ieml:
    post:
      description: |
        Return the ieml string associated with an usl json representation or an usl rules representation.
        Check for invalid structure and return an error message explaining the error if so.
        You must provide one of 'json' or 'rules' property. It return also a auto-generated translation, or
        the translation present in the library if the usl is defined. If the usl is present in the library,
        the flag defined is set to true.
      consumes:
        - application/json
      tags:
        - USL
      operationId: handlers.to_ieml
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              json:
                type: object
              rules:
                type: array
                items:
                  $ref: '#/definitions/rule'
      responses:
        '200':
          description: |
            successful request
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
              ieml:
                type: string
              defined:
                type: boolean
              translations:
                $ref: "#/definitions/translations"

  /intlekt/usl/to_rules:
    post:
      description: |
        Return the rules representation for an ieml string.
      consumes:
        - application/json
      tags:
        - USL
      operationId: handlers.usl_to_rules
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ieml
            properties:
              ieml:
                type: string
      responses:
        '200':
          description: |
            successful request
          schema:
            type: object
            required:
              - success
            properties:
              success:
                type: boolean
              rules:
                type: array
                items:
                  $ref: '#/definitions/rule'

definitions:
  term:
    properties:
      CLASS:
        type: string
      EN:
        type: string
      FR:
        type: string
      IEML:
        type: string
      LAYER:
        type: number
      PARADIGM:
        type: boolean
      ROOT_PARADIGM:
        type: boolean
      SIZE:
        type: number
      INDEX:
        type: number
      RANK:
        type: number

  drupal_term:
    properties:
      id:
        type: integer
      EN:
        type: string
      FR:
        type: string
      IEML:
        type: string
      INDEX:
        type: number

  drupal_relations:
    properties:
      term_src:
        type: integer
      term_dest:
        type: integer
      relation_name:
        type: string
      relation_type:
        type: string
      commentary:
        type: string

  ieml_object_json:
    required:
      - type
    properties:
      type:
        type: string


  ieml_object_word_json:
    required:
      - type
      - translations
      - root
      - inflexion
    properties:
      type:
        type: string

      root:
        type: array
        items:
            $ref: '#/definitions/term'
      inflexion:
        type: array
        items:
            $ref: '#/definitions/term'
      translations:
        $ref: '#/definitions/translations'


  translations:
    required:
        - FR
        - EN
    properties:
      FR:
        type: string
      EN:
        type: string
      default_EN:
        type: string
      default_FR:
        type: string

  rule:
    required:
      - ieml
      - path
    properties:
      ieml:
        type: string
      path:
        type: string

  lexicon:
    required:
      - id
      - name
      - nb_words
      - favorite
    properties:
      id:
        type: string
      name:
        type: string
      nb_words:
        type: integer
      favorite:
        type: integer

  glossary:
    required:
      - id
      - name
      - nb_terms
      - favorite
    properties:
      id:
        type: string
      name:
        type: string
      nb_terms:
        type: integer
      favorite:
        type: integer